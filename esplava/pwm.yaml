esphome:
  name: pwm
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret ssid
  password: !secret pass

logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: False

api:

ota:

status_led:
  pin: 
    number: D4
    inverted: yes

output:
  - platform: esp8266_pwm
    pin: D0
    frequency: 1000 Hz
    id: pwm_output

light:
  - platform: monochromatic
    output: pwm_output
    id: spot0
    name: "Spot #0"

i2c:
  sda: D2
  scl: D1
  scan: True
  
mcp23017:
  - id: 'mcp23017_hub'
    address: 0x20
    
binary_sensor:
  - platform: gpio
    id: touch0
    name: "Touch #0"
    pin:
      mcp23017: mcp23017_hub
      number: 0
      mode: INPUT_PULLUP
    on_press:
      then:
        - script.stop: control_spot0
        - script.execute: control_spot0

globals:
  - id: brightness_spot0
    type: int
    restore_value: no
    initial_value: '0'

script:
  - id: control_spot0
    then:
      - logger.log: "RUNNING SCRIPT"
      - if:
          condition:
            light.is_on: spot0
          then:
            lambda: id(brightness_spot0) += 0; 
          else:
            lambda: id(brightness_spot0) = 0; 
      - delay: 500ms
      - if:
          condition:
            binary_sensor.is_on: touch0
          then:
            - if:
                condition:
                  lambda: return id(brightness_spot0) > 0;
                then:
                  - logger.log: "LIGHT IS ON"
                  - while:
                      condition:
                        lambda: return id(touch0).state && id(brightness_spot0) > 0;
                      then:
                        - lambda: 'ESP_LOGD("BRIGHTNESS", "%d", id(brightness_spot0));'
                        - lambda: 'id(brightness_spot0) -= 10;'
                        - light.turn_on:
                            id: spot0
                            brightness: !lambda 'return id(brightness_spot0) / 100.0;' 
                            transition_length: !lambda 'return id(touch0).state ? 1000 : 100;'
                        - delay: !lambda 'return id(touch0).state ? 1000 : 100;'
                  - logger.log: "EXIT WHILE LIGHT IS ON"
                else:
                  - logger.log: "LIGHT IS OFF"
                  - while:
                      condition:
                        lambda: return id(touch0).state && id(brightness_spot0) < 100;
                      then:
                        - lambda: 'ESP_LOGD("BRIGHTNESS", "%d", id(brightness_spot0));'
                        - lambda: 'id(brightness_spot0) += 10;'
                        - light.turn_on:
                            id: spot0
                            brightness: !lambda 'return id(brightness_spot0) / 100.0;' 
                            transition_length: !lambda 'return id(touch0).state ? 1000 : 100;'
                        - delay: !lambda 'return id(touch0).state ? 1000 : 100;'
                  - logger.log: "EXIT WHILE LIGHT IS OFF"
          else:
            - logger.log: "JUST TOGGLE"
            - if:
                condition:
                  light.is_on: spot0
                then:
                  - lambda: id(brightness_spot0) = 0; 
                else:
                  - lambda: id(brightness_spot0) = 100; 
            - lambda: 'ESP_LOGD("BRIGHTNESS", "%d", id(brightness_spot0));'
            - light.turn_on:
                id: spot0
                brightness: !lambda 'return id(brightness_spot0) / 100.0;' 
                transition_length: !lambda 'return 100;'


